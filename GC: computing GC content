import operator
import itertools
def gc_counter(seq):
    gc_percentage = 100*(sequence.count('C')+sequence.count('G'))/len(sequence)
    return gc_percentage
    
#append ID's and sequences to their respective lists
ids = []
sequences=[]
with open('rosalind_gc(3).txt') as file_object:
    sequence = ''
    for line in file_object:
        if ('>') not in line:
            sequence	+=	line.rstrip('\n')
            continue
        else:
            ids.append(line.rstrip('\n'))
            if sequence:
                sequences.append(gc_counter(sequence))
                sequence = ""
    sequences.append(gc_counter(sequence))

#interleave ids and sequences as a list
fasta_list = ([val for pair in zip(ids, sequences) for val in pair]) 

#turn the list into a dictionary
d = dict(itertools.zip_longest(*[iter(fasta_list)] * 2, fillvalue=""))
print(d)

#find the highest value and return the key
max_id =(max(d.items(), key=operator.itemgetter(1))[0])

max_val = d[max_id]
max_id_and_val = [max_id, max_val]
print(max_id_and_val)
